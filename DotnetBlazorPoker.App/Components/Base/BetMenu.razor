@inject IJSRuntime JS;
@inject GameStateManager GameStateManager;

<aside class="bet-menu" 
       tabindex="0" 
       aria-label="Bet Menu. Bet in increments of 1, 5, 25 and 100 credits by using space, enter or arrow up. Decrease in the same increments by using arrow down."
       @ref=@_betMenuRef
>       
    <button class="button-secondary exit-button"
            aria-label="Close Bet Menu"
            @onclick=@OnClose
        >
            <img src="resources/images/icons/exit-icon-512x512.png" alt="Capital X icon" draggable="false" />
        </button>

    <section class="bet-chips">
        <picture>
            <source 
                type="image/webp"
                srcset=@(GetSource("webp", 1))
            />
            
            <img 
                @ref="_pokerChip1"
                class="poker-chip"
                src=@(GetSource("png", 1)) 
                alt="Poker chip worth 1 credit" 
                @onkeydown=@((keyboardEvent) => BetHandler(keyboardEvent, 1))
                @onclick=@((mouseEvent) => BetHandler(mouseEvent, 1)) 
                @oncontextmenu:preventDefault
                @oncontextmenu=@((mouseEvent) => BetHandler(mouseEvent, 1))
                draggable="false"
                tabindex="0"
                aria-label="Bet 1 credit"
                role="button"
                data-tilt
                data-tilt-scale="1.2"
            />
        </picture>
        

        <picture>
            <source 
                type="image/webp"
                srcset=@(GetSource("webp", 5))
            />

             <img 
                @ref="_pokerChip5"
                class="poker-chip"
                src=@(GetSource("png", 5))
                alt="Poker chip worth 5 credits" 
                @onkeydown=@((keyboardEvent) => BetHandler(keyboardEvent, 5))
                @onclick=@((mouseEvent) => BetHandler(mouseEvent, 5))
                @oncontextmenu:preventDefault
                @oncontextmenu=@((mouseEvent) => BetHandler(mouseEvent, 5))
                draggable="false"
                tabindex="0"
                aria-label="Bet 5 credits"
                role="button"
                data-tilt
                data-tilt-scale="1.2"
            />
        </picture>

        <picture>
            <source 
                type="image/webp"
                srcset=@(GetSource("webp", 25))
            />

            <img 
                @ref="_pokerChip25"
                class="poker-chip"
                src=@(GetSource("png", 25)) 
                alt="Poker chip worth 25 credits" 
                @onkeydown=@((keyboardEvent) => BetHandler(keyboardEvent, 25))
                @onclick=@((mouseEvent) => BetHandler(mouseEvent, 25))
                @oncontextmenu:preventDefault
                @oncontextmenu=@((mouseEvent) => BetHandler(mouseEvent, 25))
                draggable="false"
                tabindex="0"
                aria-label="Bet 25 credits"
                role="button"
                data-tilt
                data-tilt-scale="1.2"
            />
        </picture>

        <picture>
            <source 
                type="image/webp"
                srcset=@(GetSource("webp", 100))
            />

            <img 
                @ref="_pokerChip100"
                class="poker-chip"
                src=@(GetSource("png", 100)) 
                alt="Poker chip worth 100 credits" 
                @onkeydown=@((keyboardEvent) => BetHandler(keyboardEvent, 100))
                @onclick=@((mouseEvent) => BetHandler(mouseEvent, 100))
                @oncontextmenu:preventDefault
                @oncontextmenu=@((mouseEvent) => BetHandler(mouseEvent, 100))
                draggable="false"
                tabindex="0"
                aria-label="Bet 100 credits"
                role="button"
                data-tilt
                data-tilt-scale="1.2"
            />
        </picture>
    </section>

    <section class="bet-display">
        <h2 class="bet-display-current" role="status">You Are Betting @CurrentBet Credits</h2>
        <p class="bet-display-info"><kdb>Left Click</kdb> (+)  <kdb>Right Click</kdb> (-)</p>
    </section>

    <button class="bet-confirm-button button-primary" 
            aria-label=@($"Confirm your bet of {@CurrentBet} Credits")
            @onclick=@ConfirmBet
    >
            Confirm
    </button>
</aside>

@code 
{
    private IJSObjectReference _vanillaTilt;
    private ElementReference _pokerChip1;
    private ElementReference _pokerChip5;
    private ElementReference _pokerChip25;
    private ElementReference _pokerChip100;
    private ElementReference _betMenuRef;

    [Parameter]
    public EventCallback OnClose { get; set; }

    //[Parameter]
    //public EventCallback<int> OnCreditsReceived { get; set; }

    public int CurrentBet { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _vanillaTilt = await JS.InvokeAsync<IJSObjectReference>("import", "././lib/vanilla-tilt/vanilla-tilt.min.js" );

            await _vanillaTilt.InvokeVoidAsync("VanillaTilt.init", _pokerChip1);
            await _vanillaTilt.InvokeVoidAsync("VanillaTilt.init", _pokerChip5);
            await _vanillaTilt.InvokeVoidAsync("VanillaTilt.init", _pokerChip25);
            await _vanillaTilt.InvokeVoidAsync("VanillaTilt.init", _pokerChip100);
            await _betMenuRef.FocusAsync();
        }
    }

    /// <summary>
    /// Handles bets based on the given mouse event and credits
    /// </summary>
    /// <param name="mouseEvent">The mouse event</param>
    /// <param name="credits">The credits to increase or decrease</param>
    private void BetHandler(MouseEventArgs mouseEvent, int credits)
    {
        switch (mouseEvent.Button)
        {
            case 0:
                IncreaseBet(credits);
                break;
            case 2:
                DecreaseBet(credits);
                break;

            default:
                break;
        }
    }

    /// <summary>
    /// Handles bets based on the given keyboard event and credits
    /// </summary>
    /// <param name="keyEvent">The keyboard event</param>
    /// <param name="credits">The credits to increase or decrease</param>
    private void BetHandler(KeyboardEventArgs keyEvent, int credits)
    {
        switch (keyEvent.Code)
        {
            case "Space":
            case "Enter":
            case "ArrowUp":
                IncreaseBet(credits);
                break;
            case "ArrowDown":
                DecreaseBet(credits);
                break;
            default:
                break;
        }
    }

    /// <summary>
    /// Increases the bet by the given number of credits
    /// </summary>
    /// <param name="credits">The credits to increase by</param>
    private void IncreaseBet(int credits)
    {
        if ((CurrentBet + credits) > GameStateManager.Player.Balance)
        {
            return;
        }

        CurrentBet += credits;
    }

    /// <summary>
    /// Decreases the bet by the given number of credits
    /// </summary>
    /// <param name="credits">The credits to decrease by</param>
    private void DecreaseBet(int credits)
    {
        if ((CurrentBet - credits) < 0)
        {
            return;
        }

        CurrentBet -= credits;
    }

    private void ConfirmBet()
    {
        GameStateManager.CurrentBet = CurrentBet;
        //OnCreditsReceived.InvokeAsync((int)GameStateManager.Player.Balance  - CurrentBet);
        GameStateManager.AdvanceGameState();
        OnClose.InvokeAsync();
    }

    private string GetSource(string extension, int chipValue)
    {
        return $"resources/images/chips/poker-chip-{chipValue}-120x120.{extension}";
    }


}
